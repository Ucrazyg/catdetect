from flask import Flask, flash, request, redirect, url_for, render_template  # Importeer de vereiste modules en klassen van Flask
import urllib.request
import os
from werkzeug.utils import secure_filename

import tensorflow  # Importeer de TensorFlow-bibliotheek
from tensorflow.keras.applications.mobilenet_v2 import preprocess_input, decode_predictions  # Importeer specifieke functies en klassen uit de mobilenet_v2-module van TensorFlow
from tensorflow.keras.applications.mobilenet_v2 import MobileNetV2
from tensorflow.keras.preprocessing import image
from tensorflow.keras.preprocessing.image import load_img

import numpy as np

app = Flask(__name__)  # Maak een instantie van de Flask-klasse en geef de huidige module (__name__) door als parameter

UPLOAD_FOLDER = 'static/uploads/'

app.secret_key = "secret key"  # Stel een geheime sleutel in voor sessiebeheer
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
app.config['MAX_CONTENT_LENGTH'] = 16 * 1024 * 1024

ALLOWED_EXTENSIONS = set(['png', 'jpg', 'jpeg', 'gif'])  # Definieer een set met toegestane bestandsextensies

def allowed_file(filename):
    # Functie om te controleren of het bestandstype is toegestaan
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/')
def index():
    # De hoofdroute die het index.html-template weergeeft
    return render_template('index.html')

@app.route('/', methods=['POST'])
def upload_image():
    # Route om de ge√ºploade afbeelding te verwerken
    if 'file' not in request.files:
        flash('Geen bestand geselecteerd')
        return redirect(request.url)
    file = request.files['file']
    if file.filename == '':
        flash('Geen afbeelding geselecteerd voor uploaden')
        return redirect(request.url)
    if file and allowed_file(file.filename):
        filename = secure_filename(file.filename)
        file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))

        image_path = "static/uploads/" + filename

        # Laad het voorgeleerde Mobile
